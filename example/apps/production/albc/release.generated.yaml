---
# Source: aws-load-balancer-controller/crds/crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: ingressclassparams.elbv2.k8s.aws
spec:
  group: elbv2.k8s.aws
  names:
    kind: IngressClassParams
    listKind: IngressClassParamsList
    plural: ingressclassparams
    singular: ingressclassparams
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The Ingress Group name
      jsonPath: .spec.group.name
      name: GROUP-NAME
      type: string
    - description: The AWS Load Balancer scheme
      jsonPath: .spec.scheme
      name: SCHEME
      type: string
    - description: The AWS Load Balancer ipAddressType
      jsonPath: .spec.ipAddressType
      name: IP-ADDRESS-TYPE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IngressClassParams is the Schema for the IngressClassParams API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressClassParamsSpec defines the desired state of IngressClassParams
            properties:
              group:
                description: Group defines the IngressGroup for all Ingresses that
                  belong to IngressClass with this IngressClassParams.
                properties:
                  name:
                    description: Name is the name of IngressGroup.
                    type: string
                required:
                - name
                type: object
              inboundCIDRs:
                description: InboundCIDRs specifies the CIDRs that are allowed to
                  access the Ingresses that belong to IngressClass with this IngressClassParams.
                items:
                  type: string
                type: array
              ipAddressType:
                description: IPAddressType defines the ip address type for all Ingresses
                  that belong to IngressClass with this IngressClassParams.
                enum:
                - ipv4
                - dualstack
                type: string
              loadBalancerAttributes:
                description: LoadBalancerAttributes define the custom attributes to
                  LoadBalancers for all Ingress that that belong to IngressClass with
                  this IngressClassParams.
                items:
                  description: Attributes defines custom attributes on resources.
                  properties:
                    key:
                      description: The key of the attribute.
                      type: string
                    value:
                      description: The value of the attribute.
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              namespaceSelector:
                description: NamespaceSelector restrict the namespaces of Ingresses
                  that are allowed to specify the IngressClass with this IngressClassParams.
                  * if absent or present but empty, it selects all namespaces.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              scheme:
                description: Scheme defines the scheme for all Ingresses that belong
                  to IngressClass with this IngressClassParams.
                enum:
                - internal
                - internet-facing
                type: string
              sslPolicy:
                description: SSLPolicy specifies the SSL Policy for all Ingresses
                  that belong to IngressClass with this IngressClassParams.
                type: string
              subnets:
                description: Subnets defines the subnets for all Ingresses that belong
                  to IngressClass with this IngressClassParams.
                properties:
                  ids:
                    description: IDs specify the resource IDs of subnets. Exactly
                      one of this or `tags` must be specified.
                    items:
                      description: SubnetID specifies a subnet ID.
                      pattern: subnet-[0-9a-f]+
                      type: string
                    minItems: 1
                    type: array
                  tags:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Tags specifies subnets in the load balancer's VPC
                      where each tag specified in the map key contains one of the
                      values in the corresponding value list. Exactly one of this
                      or `ids` must be specified.
                    type: object
                type: object
              tags:
                description: Tags defines list of Tags on AWS resources provisioned
                  for Ingresses that belong to IngressClass with this IngressClassParams.
                items:
                  description: Tag defines a AWS Tag on resources.
                  properties:
                    key:
                      description: The key of the tag.
                      type: string
                    value:
                      description: The value of the tag.
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: targetgroupbindings.elbv2.k8s.aws
spec:
  group: elbv2.k8s.aws
  names:
    kind: TargetGroupBinding
    listKind: TargetGroupBindingList
    plural: targetgroupbindings
    singular: targetgroupbinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The Kubernetes Service's name
      jsonPath: .spec.serviceRef.name
      name: SERVICE-NAME
      type: string
    - description: The Kubernetes Service's port
      jsonPath: .spec.serviceRef.port
      name: SERVICE-PORT
      type: string
    - description: The AWS TargetGroup's TargetType
      jsonPath: .spec.targetType
      name: TARGET-TYPE
      type: string
    - description: The AWS TargetGroup's Amazon Resource Name
      jsonPath: .spec.targetGroupARN
      name: ARN
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TargetGroupBinding is the Schema for the TargetGroupBinding API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding
            properties:
              networking:
                description: networking provides the networking setup for ELBV2 LoadBalancer
                  to access targets in TargetGroup.
                properties:
                  ingress:
                    description: List of ingress rules to allow ELBV2 LoadBalancer
                      to access targets in TargetGroup.
                    items:
                      properties:
                        from:
                          description: List of peers which should be able to access
                            the targets in TargetGroup. At least one NetworkingPeer
                            should be specified.
                          items:
                            description: NetworkingPeer defines the source/destination
                              peer for networking rules.
                            properties:
                              ipBlock:
                                description: IPBlock defines an IPBlock peer. If specified,
                                  none of the other fields can be set.
                                properties:
                                  cidr:
                                    description: CIDR is the network CIDR. Both IPV4
                                      or IPV6 CIDR are accepted.
                                    type: string
                                required:
                                - cidr
                                type: object
                              securityGroup:
                                description: SecurityGroup defines a SecurityGroup
                                  peer. If specified, none of the other fields can
                                  be set.
                                properties:
                                  groupID:
                                    description: GroupID is the EC2 SecurityGroupID.
                                    type: string
                                required:
                                - groupID
                                type: object
                            type: object
                          type: array
                        ports:
                          description: List of ports which should be made accessible
                            on the targets in TargetGroup. If ports is empty or unspecified,
                            it defaults to all ports with TCP.
                          items:
                            properties:
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: The port which traffic must match. When
                                  NodePort endpoints(instance TargetType) is used,
                                  this must be a numerical port. When Port endpoints(ip
                                  TargetType) is used, this can be either numerical
                                  or named port on pods. if port is unspecified, it
                                  defaults to all ports.
                                x-kubernetes-int-or-string: true
                              protocol:
                                description: The protocol which traffic must match.
                                  If protocol is unspecified, it defaults to TCP.
                                enum:
                                - TCP
                                - UDP
                                type: string
                            type: object
                          type: array
                      required:
                      - from
                      - ports
                      type: object
                    type: array
                type: object
              serviceRef:
                description: serviceRef is a reference to a Kubernetes Service and
                  ServicePort.
                properties:
                  name:
                    description: Name is the name of the Service.
                    type: string
                  port:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Port is the port of the ServicePort.
                    x-kubernetes-int-or-string: true
                required:
                - name
                - port
                type: object
              targetGroupARN:
                description: targetGroupARN is the Amazon Resource Name (ARN) for
                  the TargetGroup.
                type: string
              targetType:
                description: targetType is the TargetType of TargetGroup. If unspecified,
                  it will be automatically inferred.
                enum:
                - instance
                - ip
                type: string
            required:
            - serviceRef
            - targetGroupARN
            type: object
          status:
            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding
            properties:
              observedGeneration:
                description: The generation observed by the TargetGroupBinding controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The Kubernetes Service's name
      jsonPath: .spec.serviceRef.name
      name: SERVICE-NAME
      type: string
    - description: The Kubernetes Service's port
      jsonPath: .spec.serviceRef.port
      name: SERVICE-PORT
      type: string
    - description: The AWS TargetGroup's TargetType
      jsonPath: .spec.targetType
      name: TARGET-TYPE
      type: string
    - description: The AWS TargetGroup's Amazon Resource Name
      jsonPath: .spec.targetGroupARN
      name: ARN
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: TargetGroupBinding is the Schema for the TargetGroupBinding API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding
            properties:
              ipAddressType:
                description: ipAddressType specifies whether the target group is of
                  type IPv4 or IPv6. If unspecified, it will be automatically inferred.
                enum:
                - ipv4
                - ipv6
                type: string
              networking:
                description: networking defines the networking rules to allow ELBV2
                  LoadBalancer to access targets in TargetGroup.
                properties:
                  ingress:
                    description: List of ingress rules to allow ELBV2 LoadBalancer
                      to access targets in TargetGroup.
                    items:
                      description: NetworkingIngressRule defines a particular set
                        of traffic that is allowed to access TargetGroup's targets.
                      properties:
                        from:
                          description: List of peers which should be able to access
                            the targets in TargetGroup. At least one NetworkingPeer
                            should be specified.
                          items:
                            description: NetworkingPeer defines the source/destination
                              peer for networking rules.
                            properties:
                              ipBlock:
                                description: IPBlock defines an IPBlock peer. If specified,
                                  none of the other fields can be set.
                                properties:
                                  cidr:
                                    description: CIDR is the network CIDR. Both IPV4
                                      or IPV6 CIDR are accepted.
                                    type: string
                                required:
                                - cidr
                                type: object
                              securityGroup:
                                description: SecurityGroup defines a SecurityGroup
                                  peer. If specified, none of the other fields can
                                  be set.
                                properties:
                                  groupID:
                                    description: GroupID is the EC2 SecurityGroupID.
                                    type: string
                                required:
                                - groupID
                                type: object
                            type: object
                          type: array
                        ports:
                          description: List of ports which should be made accessible
                            on the targets in TargetGroup. If ports is empty or unspecified,
                            it defaults to all ports with TCP.
                          items:
                            description: NetworkingPort defines the port and protocol
                              for networking rules.
                            properties:
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: The port which traffic must match. When
                                  NodePort endpoints(instance TargetType) is used,
                                  this must be a numerical port. When Port endpoints(ip
                                  TargetType) is used, this can be either numerical
                                  or named port on pods. if port is unspecified, it
                                  defaults to all ports.
                                x-kubernetes-int-or-string: true
                              protocol:
                                description: The protocol which traffic must match.
                                  If protocol is unspecified, it defaults to TCP.
                                enum:
                                - TCP
                                - UDP
                                type: string
                            type: object
                          type: array
                      required:
                      - from
                      - ports
                      type: object
                    type: array
                type: object
              nodeSelector:
                description: node selector for instance type target groups to only
                  register certain nodes
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              serviceRef:
                description: serviceRef is a reference to a Kubernetes Service and
                  ServicePort.
                properties:
                  name:
                    description: Name is the name of the Service.
                    type: string
                  port:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Port is the port of the ServicePort.
                    x-kubernetes-int-or-string: true
                required:
                - name
                - port
                type: object
              targetGroupARN:
                description: targetGroupARN is the Amazon Resource Name (ARN) for
                  the TargetGroup.
                minLength: 1
                type: string
              targetType:
                description: targetType is the TargetType of TargetGroup. If unspecified,
                  it will be automatically inferred.
                enum:
                - instance
                - ip
                type: string
            required:
            - serviceRef
            - targetGroupARN
            type: object
          status:
            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding
            properties:
              observedGeneration:
                description: The generation observed by the TargetGroupBinding controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: aws-load-balancer-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: albc
  namespace: albc
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::XXX:role/some-albc-role
automountServiceAccountToken: true
---
# Source: aws-load-balancer-controller/templates/webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: aws-load-balancer-tls
  namespace: albc
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBrN2VndkxOUmlSQkhvT2NEdW9NVTR3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZllYZHpMV3h2WVdRdFltRnNZVzVqWlhJdFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweQpOREF4TURVd05qTTVNRFphRncwek5EQXhNREl3TmpNNU1EWmFNQ294S0RBbUJnTlZCQU1USDJGM2N5MXNiMkZrCkxXSmhiR0Z1WTJWeUxXTnZiblJ5YjJ4c1pYSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUR3TTJNRDFtc3ZjeG1MZU4zK0lvTTNxcGpQcmphb09ucEhUYzAvaG1aYUZRVU5JTnptODNQNwpLTy9rbUk5ZHNNNEtzaFpLWHFCbGFXeVpHVFM0N3oyRW5HZ29rU2F2M0hBbExIZWpHWkFBeDI3ZXIrUmordmt1CnJzQ2FGRGJqY2ZDNHNucmRtckI4enpXaEdpb0VoODJZUkdPeW5la0J6QlpONFVZOFlQNVAvU0tVeVlvU3pxME0KV2dDTWlmVjlvU1g0MGlNWE5JV1kwNHB2UmtTWndZMmFkNjhUSTJXR0Z4eDdrRlJPdmpqeE8rR09tcTlBNm9vRwpVUDU1UlpmeXo3aWpZeEVndlZFN1lwTEplTGdnRW5VUENhNjJILzRnT0pHN3RTTU5FdFplck1TZHdpeTZCckErCnJadmRlS2xuUFBjVUFWbEsxQ2Y1QW9JSjZ2ejFYOFQ3QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa0lneUVLZjNoZEdqWnRHc1dmaW9yVkpBdkxRd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTTRJWCs3OXJtUXNRZ2ZWckwvbUY0Y21SbHQxK01WRk55c09CM1VUN3VOdUNmY2ZKbkpIMnZHS1hPdjIKaTZJUzVDTlF0ai9xRWQ2QmNrdXpiTk9FRnl4VjdnTmFxa0hvMUdualZMUHF3UEpmUytXaWNiaURnTVlrV2YxTApHL3J3WWRDUjJIczFXT3RJZUJjMUVqR1NjQ2Z2bU92b3NaRFk1Q0d4UHFiRnRZVXg1UUw2V1JGSTlPRytWaEt4CnJTSDlJNEgxM1ZlSGVBUmhZWjFmMVFkaWNYVmwwRmh5TkpLN3luT003aVV2c0JJTzFad2RvWHJYVkxWVmhCVHMKWVFnQ3RqSFZQSXMxckg5dzlYcGFvOTYrOEZETjduNWMrcWI2TW5Oa1hYZWlKZ0ttNCtFMHRkaFNuSUZxVDlqQQo1T2NnQzk2RHozc3ExenBFWDNiUTZBZSs5TUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzakNDQXNhZ0F3SUJBZ0lRU0pEdHkvM0VpTDNLUURXUklqNzFjakFOQmdrcWhraUc5dzBCQVFzRkFEQXEKTVNnd0pnWURWUVFERXg5aGQzTXRiRzloWkMxaVlXeGhibU5sY2kxamIyNTBjbTlzYkdWeUxXTmhNQjRYRFRJMApNREV3TlRBMk16a3dObG9YRFRNME1ERXdNakEyTXprd05sb3dMREVxTUNnR0ExVUVBeE1oWVd4aVl5MWhkM010CmJHOWhaQzFpWVd4aGJtTmxjaTFqYjI1MGNtOXNiR1Z5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBcW94RUJHR3IySTNiclVYeUtEc2VKZ2gyeUJ2VXVPeWtrQXUyTUs2dEpWS1ZsTjdnZm9ZOQpDbUZuL21mK2VRT1JZcE5KYk8rNlh5aEhBQUg4OHJLTCsvejJ4SHkrWUEzQTVkQTgzYmV0cWFKV0VKTk5IakJPClB1cGZBdFdLS0FTVVJsR2pYaStCVjBiQkNhbDdueUxsdjNRbm9GZXNzSlY4M2UyWnNielF3OHVDbkhRTW1oMXAKVVRRSHBNdTNpTlJqd1RkV1hBaDF6RExkMjFsL3kza21LdFlpMzZvV2FWTmoyU0tTVlZhNTFNK2dheE1MVGZQTwpMV1RmeG12T3YvUDd0S1BrME5wck14amdLdzkwSzlydGx0bitlRStDN09NcHQ1UlY0YWVyVk81SnhVdEI3VW1uClF1STRPaHJFbFJJc3EzV2RUSmdtMUVqa2lYZi9UYmJpL3dJREFRQUJvNEg5TUlINk1BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFmQmdOVkhTTUVHREFXZ0JTUWlESVFwL2VGMGFObTBheForS2l0VWtDOHREQ0JtUVlEVlIwUkJJR1JNSUdPCmdpWmhkM010Ykc5aFpDMWlZV3hoYm1ObGNpMTNaV0pvYjI5ckxYTmxjblpwWTJVdVlXeGlZNElxWVhkekxXeHYKWVdRdFltRnNZVzVqWlhJdGQyVmlhRzl2YXkxelpYSjJhV05sTG1Gc1ltTXVjM1pqZ2poaGQzTXRiRzloWkMxaQpZV3hoYm1ObGNpMTNaV0pvYjI5ckxYTmxjblpwWTJVdVlXeGlZeTV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWYxanRRTjRUdGtPZURCWUxjdWJQaHkvUWZBYWRtRzF2eWRFV0Q3eW0KQXh0NzJTT3Jkb0FuZ3R3V0ZhQ3BjQVFpRUdYdm16WXdEazhSZUFNa3dEaWJQNjd0WTh5Yk5DUWdlNHRCUVMvWgpWNlk3eFY5NExSb0NUNVVhcDdORFU5V2FKNlA5bGNrOVRWM0UvNGFLaG41UkF4NS9lQ3paL3FRODMwV3djdXcxCjF4OVd2SXgwZE9ERmZud1Nsek9QSG9qcFVpNXByd1J0OFl5c2tQaUxkaXNjY2lDQm1qYWJ0QUI2aHdoTk1sYmwKbWZ3b09pbkNvV3Mwd1YxdnU0KzF6MlVHYlVxdVQ2T3pOd2w4aDVYRWo5RFdiY1I5N01JbkFmTjdKZGVSd0t6VQpkaHBxcDROL2Rvc2lkekpOU2FWODE1UWhFUlZ0ejhnaExmemdGOWRDMjNsVmFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcW94RUJHR3IySTNiclVYeUtEc2VKZ2gyeUJ2VXVPeWtrQXUyTUs2dEpWS1ZsTjdnCmZvWTlDbUZuL21mK2VRT1JZcE5KYk8rNlh5aEhBQUg4OHJLTCsvejJ4SHkrWUEzQTVkQTgzYmV0cWFKV0VKTk4KSGpCT1B1cGZBdFdLS0FTVVJsR2pYaStCVjBiQkNhbDdueUxsdjNRbm9GZXNzSlY4M2UyWnNielF3OHVDbkhRTQptaDFwVVRRSHBNdTNpTlJqd1RkV1hBaDF6RExkMjFsL3kza21LdFlpMzZvV2FWTmoyU0tTVlZhNTFNK2dheE1MClRmUE9MV1RmeG12T3YvUDd0S1BrME5wck14amdLdzkwSzlydGx0bitlRStDN09NcHQ1UlY0YWVyVk81SnhVdEIKN1VtblF1STRPaHJFbFJJc3EzV2RUSmdtMUVqa2lYZi9UYmJpL3dJREFRQUJBb0lCQUhtS2hycWNwS3dxeEtCaQpsYVhvSTU4MUx2bURKQUU1M0RrdnI0SllLZHJNVlArSUtuTGcxY1Y5RDNDMXlodVIyRjFvMjgzL3RsRTBVZzBHClhhN1VZWUNPa1lvTDRGeHgwTU8ydUhuRitjUkhoWkJBZVpnSEV1d3hlTTU3UWY4czdFS0UwYWxBcjZ0MEtBUHIKdmNiMlJzYy9UeklzNlV2YTdPYjMraTA1ZzRuVVo0Q2pIUzVEMHZMdHZNTHhHNzZ5STk3YWVCZDFFSDJKTlNCWApLYjFpZFI2NTFRY0QwVXc5cFBrbG9tYjJQTlBET0w3a3NrNGl0dHhhMzZjNVc0WmRiOXV2N0d2ZC9xZktXN1RVCjhSTmJVWGpPL1RSSUpnRG1FaEhaekdvR0JoWEZ4MlJRa3lhY3V0alBhUmpZckIyMG1BUTQvbVJHU3Z5dzhad0oKaXBUOWRqRUNnWUVBeE5HRGRRRW9PQ1B6YURNc3JCV050Rjh6U251ODdFZEV1dUIvbnhGaml4TDE5ZGhMUzdETApsV0VWZEd2enJ2NC9nTjVZSFJYTHlmMFNzZXBoOGN5aVY4elQrM2NMSVkvWEhVZzlkV1k5UEtkSXVhY2NpQTJHCk13ZDY0MU9Kam9PUXpuajBuR3dyL2RqeUJTVmJGWFp4bStWWlNZQlNYR0piMFBWcVFRZk9ib2tDZ1lFQTNkU0gKVDEvOTFFM3hzSWszOWhkUmhoa3lNQUk2ZUE3dFJ5Y2pQN2dCaFJpZHJIZkNCYU5YSjNPNzlCcHJGWjA4Rm9icQo3YTE1MzIvVlVTeW4rRk05aGVKZGNtQjB4Z1luZ09oYVR0Y0FEdFFKelBQYTIySDRFNXpZT1o5dUxSQzA4Rjd5CmhpMmZDRVRLYXdWWkN3Z3h0d3R4UkN6TjBReks2UkpYQ04wdG8wY0NnWUFtWEFNMythckNEbGV4VmsvOWxoSFIKTnNERFlveDJySWs3dHVlSXRCWG5sQ0YxOGRyeS9Ka2hHeFBZWmZYUGhHUVNGTU90bjRMaGNqNkRpSC9nWlphNgpjQVJjdlYzaEE2elVXekVIUVk3cjFGcTdQRk8yUEpTTU80ZjY2RndsOTRSd2lXaDdXQ1hXeXNLWXVDZ2hiYjFFCnVoV0Yyc215a2NUOVcrZUNseWZucVFLQmdBdDhFbGxRcmZLTTZvTnFSMFJ0WnFJYnNkWjhkd3g2TVZ5cXNROSsKZGsydXZaTU5URFZBaEtXZFAxRGZBVVpJTXJFejRQdlhMR1VlQkJ4RXhKbDlyY1M5dUhyUWRacysvRktYTlAyNQo4ZDNTcW9NNjZNek00S3diUmJLT0I0VTd4VEpncUF1OFZ1eDFxMGtwS0xnQ2Y1aHJkanpDV1JHR3FRYXlGV0YzCkdnTEhBb0dBRGl3ejNWZHFrc093NUNZZDVLZXVGZC9IdWdUeHp4cVhDWlNiVlcwV29DR2NJUW9jU1ZZeTBvU2oKYWZzZ05zM04wVXNBd1ZDNHVrQ0k4MC9uajlBWXlUWHNCNDcwdjVPeE1DUWJsODlvRHNGZkdiRG4wd3grY2tHawpvTHJTNVpqS2ZFRFM3ZnVOcWNhUndIdEJpNjR0UjcyZHBQOUR1d3RaLzl3RDFyM1dwMjA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: aws-load-balancer-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: albc-aws-load-balancer-controller-role
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["elbv2.k8s.aws"]
  resources: [targetgroupbindings]
  verbs: [create, delete, get, list, patch, update, watch]
- apiGroups: ["elbv2.k8s.aws"]
  resources: [ingressclassparams]
  verbs: [get, list, watch]
- apiGroups: [""]
  resources: [events]
  verbs: [create, patch]
- apiGroups: [""]
  resources: [pods]
  verbs: [get, list, watch]
- apiGroups: ["networking.k8s.io"]
  resources: [ingressclasses]
  verbs: [get, list, watch]
- apiGroups: ["", "extensions", "networking.k8s.io"]
  resources: [services, ingresses]
  verbs: [get, list, patch, update, watch]
- apiGroups: [""]
  resources: [nodes, namespaces, endpoints]
  verbs: [get, list, watch]
- apiGroups: ["elbv2.k8s.aws", "", "extensions", "networking.k8s.io"]
  resources: [targetgroupbindings/status, pods/status, services/status, ingresses/status]
  verbs: [update, patch]
- apiGroups: ["discovery.k8s.io"]
  resources: [endpointslices]
  verbs: [get, list, watch]
---
# Source: aws-load-balancer-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: albc-aws-load-balancer-controller-rolebinding
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: albc-aws-load-balancer-controller-role
subjects:
- kind: ServiceAccount
  name: albc
  namespace: albc
---
# Source: aws-load-balancer-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: albc-aws-load-balancer-controller-leader-election-role
  namespace: albc
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: [configmaps]
  verbs: [create]
- apiGroups: [""]
  resources: [configmaps]
  resourceNames: [aws-load-balancer-controller-leader]
  verbs: [get, patch, update]
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  resourceNames:
  - aws-load-balancer-controller-leader
  verbs:
  - get
  - update
  - patch
---
# Source: aws-load-balancer-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: albc-aws-load-balancer-controller-leader-election-rolebinding
  namespace: albc
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: albc-aws-load-balancer-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: albc
  namespace: albc
---
# Source: aws-load-balancer-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: aws-load-balancer-webhook-service
  namespace: albc
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webhook
    prometheus.io/service-monitor: "false"
spec:
  ports:
  - port: 443
    name: webhook-server
    targetPort: webhook-server
  selector:
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
---
# Source: aws-load-balancer-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: albc-aws-load-balancer-controller
  namespace: albc
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-load-balancer-controller
      app.kubernetes.io/instance: albc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-load-balancer-controller
        app.kubernetes.io/instance: albc
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: albc
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: aws-load-balancer-tls
      securityContext:
        fsGroup: 65534
      containers:
      - name: aws-load-balancer-controller
        args:
        - --cluster-name=production
        - --ingress-class=alb
        - --aws-region=us-east-1
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        image: "public.ecr.aws/eks/aws-load-balancer-controller:v2.6.1"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        - name: metrics-server
          containerPort: 8080
          protocol: TCP
        resources:
          {}
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: 61779
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 10
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - aws-load-balancer-controller
              topologyKey: kubernetes.io/hostname
      priorityClassName: "system-cluster-critical"
---
# Source: aws-load-balancer-controller/templates/ingressclass.yaml
apiVersion: v1
kind: List
metadata:
  name: ingress-class
items:
- apiVersion: elbv2.k8s.aws/v1beta1
  kind: IngressClassParams
  metadata:
    name: alb
    labels:
      helm.sh/chart: aws-load-balancer-controller-1.6.1
      app.kubernetes.io/name: aws-load-balancer-controller
      app.kubernetes.io/instance: albc
      app.kubernetes.io/version: "v2.6.1"
      app.kubernetes.io/managed-by: Helm
- apiVersion: networking.k8s.io/v1
  kind: IngressClass
  metadata:
    name: alb
    labels:
      helm.sh/chart: aws-load-balancer-controller-1.6.1
      app.kubernetes.io/name: aws-load-balancer-controller
      app.kubernetes.io/instance: albc
      app.kubernetes.io/version: "v2.6.1"
      app.kubernetes.io/managed-by: Helm
  spec:
    controller: ingress.k8s.aws/alb
---
# Source: aws-load-balancer-controller/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: aws-load-balancer-webhook
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
webhooks:
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBrN2VndkxOUmlSQkhvT2NEdW9NVTR3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZllYZHpMV3h2WVdRdFltRnNZVzVqWlhJdFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweQpOREF4TURVd05qTTVNRFphRncwek5EQXhNREl3TmpNNU1EWmFNQ294S0RBbUJnTlZCQU1USDJGM2N5MXNiMkZrCkxXSmhiR0Z1WTJWeUxXTnZiblJ5YjJ4c1pYSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUR3TTJNRDFtc3ZjeG1MZU4zK0lvTTNxcGpQcmphb09ucEhUYzAvaG1aYUZRVU5JTnptODNQNwpLTy9rbUk5ZHNNNEtzaFpLWHFCbGFXeVpHVFM0N3oyRW5HZ29rU2F2M0hBbExIZWpHWkFBeDI3ZXIrUmordmt1CnJzQ2FGRGJqY2ZDNHNucmRtckI4enpXaEdpb0VoODJZUkdPeW5la0J6QlpONFVZOFlQNVAvU0tVeVlvU3pxME0KV2dDTWlmVjlvU1g0MGlNWE5JV1kwNHB2UmtTWndZMmFkNjhUSTJXR0Z4eDdrRlJPdmpqeE8rR09tcTlBNm9vRwpVUDU1UlpmeXo3aWpZeEVndlZFN1lwTEplTGdnRW5VUENhNjJILzRnT0pHN3RTTU5FdFplck1TZHdpeTZCckErCnJadmRlS2xuUFBjVUFWbEsxQ2Y1QW9JSjZ2ejFYOFQ3QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa0lneUVLZjNoZEdqWnRHc1dmaW9yVkpBdkxRd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTTRJWCs3OXJtUXNRZ2ZWckwvbUY0Y21SbHQxK01WRk55c09CM1VUN3VOdUNmY2ZKbkpIMnZHS1hPdjIKaTZJUzVDTlF0ai9xRWQ2QmNrdXpiTk9FRnl4VjdnTmFxa0hvMUdualZMUHF3UEpmUytXaWNiaURnTVlrV2YxTApHL3J3WWRDUjJIczFXT3RJZUJjMUVqR1NjQ2Z2bU92b3NaRFk1Q0d4UHFiRnRZVXg1UUw2V1JGSTlPRytWaEt4CnJTSDlJNEgxM1ZlSGVBUmhZWjFmMVFkaWNYVmwwRmh5TkpLN3luT003aVV2c0JJTzFad2RvWHJYVkxWVmhCVHMKWVFnQ3RqSFZQSXMxckg5dzlYcGFvOTYrOEZETjduNWMrcWI2TW5Oa1hYZWlKZ0ttNCtFMHRkaFNuSUZxVDlqQQo1T2NnQzk2RHozc3ExenBFWDNiUTZBZSs5TUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    
    service:
      name: aws-load-balancer-webhook-service
      namespace: albc
      path: /mutate-v1-pod
  failurePolicy: Fail
  name: mpod.elbv2.k8s.aws
  admissionReviewVersions:
  - v1beta1
  namespaceSelector:
    matchExpressions:
    
    - key: elbv2.k8s.aws/pod-readiness-gate-inject
      operator: In
      values:
      - enabled
    
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/name
      operator: NotIn
      values:
      - aws-load-balancer-controller
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBrN2VndkxOUmlSQkhvT2NEdW9NVTR3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZllYZHpMV3h2WVdRdFltRnNZVzVqWlhJdFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweQpOREF4TURVd05qTTVNRFphRncwek5EQXhNREl3TmpNNU1EWmFNQ294S0RBbUJnTlZCQU1USDJGM2N5MXNiMkZrCkxXSmhiR0Z1WTJWeUxXTnZiblJ5YjJ4c1pYSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUR3TTJNRDFtc3ZjeG1MZU4zK0lvTTNxcGpQcmphb09ucEhUYzAvaG1aYUZRVU5JTnptODNQNwpLTy9rbUk5ZHNNNEtzaFpLWHFCbGFXeVpHVFM0N3oyRW5HZ29rU2F2M0hBbExIZWpHWkFBeDI3ZXIrUmordmt1CnJzQ2FGRGJqY2ZDNHNucmRtckI4enpXaEdpb0VoODJZUkdPeW5la0J6QlpONFVZOFlQNVAvU0tVeVlvU3pxME0KV2dDTWlmVjlvU1g0MGlNWE5JV1kwNHB2UmtTWndZMmFkNjhUSTJXR0Z4eDdrRlJPdmpqeE8rR09tcTlBNm9vRwpVUDU1UlpmeXo3aWpZeEVndlZFN1lwTEplTGdnRW5VUENhNjJILzRnT0pHN3RTTU5FdFplck1TZHdpeTZCckErCnJadmRlS2xuUFBjVUFWbEsxQ2Y1QW9JSjZ2ejFYOFQ3QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa0lneUVLZjNoZEdqWnRHc1dmaW9yVkpBdkxRd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTTRJWCs3OXJtUXNRZ2ZWckwvbUY0Y21SbHQxK01WRk55c09CM1VUN3VOdUNmY2ZKbkpIMnZHS1hPdjIKaTZJUzVDTlF0ai9xRWQ2QmNrdXpiTk9FRnl4VjdnTmFxa0hvMUdualZMUHF3UEpmUytXaWNiaURnTVlrV2YxTApHL3J3WWRDUjJIczFXT3RJZUJjMUVqR1NjQ2Z2bU92b3NaRFk1Q0d4UHFiRnRZVXg1UUw2V1JGSTlPRytWaEt4CnJTSDlJNEgxM1ZlSGVBUmhZWjFmMVFkaWNYVmwwRmh5TkpLN3luT003aVV2c0JJTzFad2RvWHJYVkxWVmhCVHMKWVFnQ3RqSFZQSXMxckg5dzlYcGFvOTYrOEZETjduNWMrcWI2TW5Oa1hYZWlKZ0ttNCtFMHRkaFNuSUZxVDlqQQo1T2NnQzk2RHozc3ExenBFWDNiUTZBZSs5TUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    
    service:
      name: aws-load-balancer-webhook-service
      namespace: albc
      path: /mutate-v1-service
  failurePolicy: Fail
  name: mservice.elbv2.k8s.aws
  admissionReviewVersions:
  - v1beta1
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/name
      operator: NotIn
      values:
      - aws-load-balancer-controller
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - services
  sideEffects: None
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBrN2VndkxOUmlSQkhvT2NEdW9NVTR3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZllYZHpMV3h2WVdRdFltRnNZVzVqWlhJdFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweQpOREF4TURVd05qTTVNRFphRncwek5EQXhNREl3TmpNNU1EWmFNQ294S0RBbUJnTlZCQU1USDJGM2N5MXNiMkZrCkxXSmhiR0Z1WTJWeUxXTnZiblJ5YjJ4c1pYSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUR3TTJNRDFtc3ZjeG1MZU4zK0lvTTNxcGpQcmphb09ucEhUYzAvaG1aYUZRVU5JTnptODNQNwpLTy9rbUk5ZHNNNEtzaFpLWHFCbGFXeVpHVFM0N3oyRW5HZ29rU2F2M0hBbExIZWpHWkFBeDI3ZXIrUmordmt1CnJzQ2FGRGJqY2ZDNHNucmRtckI4enpXaEdpb0VoODJZUkdPeW5la0J6QlpONFVZOFlQNVAvU0tVeVlvU3pxME0KV2dDTWlmVjlvU1g0MGlNWE5JV1kwNHB2UmtTWndZMmFkNjhUSTJXR0Z4eDdrRlJPdmpqeE8rR09tcTlBNm9vRwpVUDU1UlpmeXo3aWpZeEVndlZFN1lwTEplTGdnRW5VUENhNjJILzRnT0pHN3RTTU5FdFplck1TZHdpeTZCckErCnJadmRlS2xuUFBjVUFWbEsxQ2Y1QW9JSjZ2ejFYOFQ3QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa0lneUVLZjNoZEdqWnRHc1dmaW9yVkpBdkxRd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTTRJWCs3OXJtUXNRZ2ZWckwvbUY0Y21SbHQxK01WRk55c09CM1VUN3VOdUNmY2ZKbkpIMnZHS1hPdjIKaTZJUzVDTlF0ai9xRWQ2QmNrdXpiTk9FRnl4VjdnTmFxa0hvMUdualZMUHF3UEpmUytXaWNiaURnTVlrV2YxTApHL3J3WWRDUjJIczFXT3RJZUJjMUVqR1NjQ2Z2bU92b3NaRFk1Q0d4UHFiRnRZVXg1UUw2V1JGSTlPRytWaEt4CnJTSDlJNEgxM1ZlSGVBUmhZWjFmMVFkaWNYVmwwRmh5TkpLN3luT003aVV2c0JJTzFad2RvWHJYVkxWVmhCVHMKWVFnQ3RqSFZQSXMxckg5dzlYcGFvOTYrOEZETjduNWMrcWI2TW5Oa1hYZWlKZ0ttNCtFMHRkaFNuSUZxVDlqQQo1T2NnQzk2RHozc3ExenBFWDNiUTZBZSs5TUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    
    service:
      name: aws-load-balancer-webhook-service
      namespace: albc
      path: /mutate-elbv2-k8s-aws-v1beta1-targetgroupbinding
  failurePolicy: Fail
  name: mtargetgroupbinding.elbv2.k8s.aws
  admissionReviewVersions:
  - v1beta1
  rules:
  - apiGroups:
    - elbv2.k8s.aws
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - targetgroupbindings
  sideEffects: None
---
# Source: aws-load-balancer-controller/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: aws-load-balancer-webhook
  labels:
    helm.sh/chart: aws-load-balancer-controller-1.6.1
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/instance: albc
    app.kubernetes.io/version: "v2.6.1"
    app.kubernetes.io/managed-by: Helm
webhooks:
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBrN2VndkxOUmlSQkhvT2NEdW9NVTR3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZllYZHpMV3h2WVdRdFltRnNZVzVqWlhJdFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweQpOREF4TURVd05qTTVNRFphRncwek5EQXhNREl3TmpNNU1EWmFNQ294S0RBbUJnTlZCQU1USDJGM2N5MXNiMkZrCkxXSmhiR0Z1WTJWeUxXTnZiblJ5YjJ4c1pYSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUR3TTJNRDFtc3ZjeG1MZU4zK0lvTTNxcGpQcmphb09ucEhUYzAvaG1aYUZRVU5JTnptODNQNwpLTy9rbUk5ZHNNNEtzaFpLWHFCbGFXeVpHVFM0N3oyRW5HZ29rU2F2M0hBbExIZWpHWkFBeDI3ZXIrUmordmt1CnJzQ2FGRGJqY2ZDNHNucmRtckI4enpXaEdpb0VoODJZUkdPeW5la0J6QlpONFVZOFlQNVAvU0tVeVlvU3pxME0KV2dDTWlmVjlvU1g0MGlNWE5JV1kwNHB2UmtTWndZMmFkNjhUSTJXR0Z4eDdrRlJPdmpqeE8rR09tcTlBNm9vRwpVUDU1UlpmeXo3aWpZeEVndlZFN1lwTEplTGdnRW5VUENhNjJILzRnT0pHN3RTTU5FdFplck1TZHdpeTZCckErCnJadmRlS2xuUFBjVUFWbEsxQ2Y1QW9JSjZ2ejFYOFQ3QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa0lneUVLZjNoZEdqWnRHc1dmaW9yVkpBdkxRd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTTRJWCs3OXJtUXNRZ2ZWckwvbUY0Y21SbHQxK01WRk55c09CM1VUN3VOdUNmY2ZKbkpIMnZHS1hPdjIKaTZJUzVDTlF0ai9xRWQ2QmNrdXpiTk9FRnl4VjdnTmFxa0hvMUdualZMUHF3UEpmUytXaWNiaURnTVlrV2YxTApHL3J3WWRDUjJIczFXT3RJZUJjMUVqR1NjQ2Z2bU92b3NaRFk1Q0d4UHFiRnRZVXg1UUw2V1JGSTlPRytWaEt4CnJTSDlJNEgxM1ZlSGVBUmhZWjFmMVFkaWNYVmwwRmh5TkpLN3luT003aVV2c0JJTzFad2RvWHJYVkxWVmhCVHMKWVFnQ3RqSFZQSXMxckg5dzlYcGFvOTYrOEZETjduNWMrcWI2TW5Oa1hYZWlKZ0ttNCtFMHRkaFNuSUZxVDlqQQo1T2NnQzk2RHozc3ExenBFWDNiUTZBZSs5TUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    
    service:
      name: aws-load-balancer-webhook-service
      namespace: albc
      path: /validate-elbv2-k8s-aws-v1beta1-ingressclassparams
  failurePolicy: Fail
  name: vingressclassparams.elbv2.k8s.aws
  admissionReviewVersions:
  - v1beta1
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/name
      operator: NotIn
      values:
      - aws-load-balancer-controller
  rules:
  - apiGroups:
    - elbv2.k8s.aws
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingressclassparams
  sideEffects: None
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBrN2VndkxOUmlSQkhvT2NEdW9NVTR3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZllYZHpMV3h2WVdRdFltRnNZVzVqWlhJdFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweQpOREF4TURVd05qTTVNRFphRncwek5EQXhNREl3TmpNNU1EWmFNQ294S0RBbUJnTlZCQU1USDJGM2N5MXNiMkZrCkxXSmhiR0Z1WTJWeUxXTnZiblJ5YjJ4c1pYSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUR3TTJNRDFtc3ZjeG1MZU4zK0lvTTNxcGpQcmphb09ucEhUYzAvaG1aYUZRVU5JTnptODNQNwpLTy9rbUk5ZHNNNEtzaFpLWHFCbGFXeVpHVFM0N3oyRW5HZ29rU2F2M0hBbExIZWpHWkFBeDI3ZXIrUmordmt1CnJzQ2FGRGJqY2ZDNHNucmRtckI4enpXaEdpb0VoODJZUkdPeW5la0J6QlpONFVZOFlQNVAvU0tVeVlvU3pxME0KV2dDTWlmVjlvU1g0MGlNWE5JV1kwNHB2UmtTWndZMmFkNjhUSTJXR0Z4eDdrRlJPdmpqeE8rR09tcTlBNm9vRwpVUDU1UlpmeXo3aWpZeEVndlZFN1lwTEplTGdnRW5VUENhNjJILzRnT0pHN3RTTU5FdFplck1TZHdpeTZCckErCnJadmRlS2xuUFBjVUFWbEsxQ2Y1QW9JSjZ2ejFYOFQ3QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa0lneUVLZjNoZEdqWnRHc1dmaW9yVkpBdkxRd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTTRJWCs3OXJtUXNRZ2ZWckwvbUY0Y21SbHQxK01WRk55c09CM1VUN3VOdUNmY2ZKbkpIMnZHS1hPdjIKaTZJUzVDTlF0ai9xRWQ2QmNrdXpiTk9FRnl4VjdnTmFxa0hvMUdualZMUHF3UEpmUytXaWNiaURnTVlrV2YxTApHL3J3WWRDUjJIczFXT3RJZUJjMUVqR1NjQ2Z2bU92b3NaRFk1Q0d4UHFiRnRZVXg1UUw2V1JGSTlPRytWaEt4CnJTSDlJNEgxM1ZlSGVBUmhZWjFmMVFkaWNYVmwwRmh5TkpLN3luT003aVV2c0JJTzFad2RvWHJYVkxWVmhCVHMKWVFnQ3RqSFZQSXMxckg5dzlYcGFvOTYrOEZETjduNWMrcWI2TW5Oa1hYZWlKZ0ttNCtFMHRkaFNuSUZxVDlqQQo1T2NnQzk2RHozc3ExenBFWDNiUTZBZSs5TUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    
    service:
      name: aws-load-balancer-webhook-service
      namespace: albc
      path: /validate-elbv2-k8s-aws-v1beta1-targetgroupbinding
  failurePolicy: Fail
  name: vtargetgroupbinding.elbv2.k8s.aws
  admissionReviewVersions:
  - v1beta1
  rules:
  - apiGroups:
    - elbv2.k8s.aws
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - targetgroupbindings
  sideEffects: None
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBrN2VndkxOUmlSQkhvT2NEdW9NVTR3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZllYZHpMV3h2WVdRdFltRnNZVzVqWlhJdFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweQpOREF4TURVd05qTTVNRFphRncwek5EQXhNREl3TmpNNU1EWmFNQ294S0RBbUJnTlZCQU1USDJGM2N5MXNiMkZrCkxXSmhiR0Z1WTJWeUxXTnZiblJ5YjJ4c1pYSXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUR3TTJNRDFtc3ZjeG1MZU4zK0lvTTNxcGpQcmphb09ucEhUYzAvaG1aYUZRVU5JTnptODNQNwpLTy9rbUk5ZHNNNEtzaFpLWHFCbGFXeVpHVFM0N3oyRW5HZ29rU2F2M0hBbExIZWpHWkFBeDI3ZXIrUmordmt1CnJzQ2FGRGJqY2ZDNHNucmRtckI4enpXaEdpb0VoODJZUkdPeW5la0J6QlpONFVZOFlQNVAvU0tVeVlvU3pxME0KV2dDTWlmVjlvU1g0MGlNWE5JV1kwNHB2UmtTWndZMmFkNjhUSTJXR0Z4eDdrRlJPdmpqeE8rR09tcTlBNm9vRwpVUDU1UlpmeXo3aWpZeEVndlZFN1lwTEplTGdnRW5VUENhNjJILzRnT0pHN3RTTU5FdFplck1TZHdpeTZCckErCnJadmRlS2xuUFBjVUFWbEsxQ2Y1QW9JSjZ2ejFYOFQ3QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVa0lneUVLZjNoZEdqWnRHc1dmaW9yVkpBdkxRd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTTRJWCs3OXJtUXNRZ2ZWckwvbUY0Y21SbHQxK01WRk55c09CM1VUN3VOdUNmY2ZKbkpIMnZHS1hPdjIKaTZJUzVDTlF0ai9xRWQ2QmNrdXpiTk9FRnl4VjdnTmFxa0hvMUdualZMUHF3UEpmUytXaWNiaURnTVlrV2YxTApHL3J3WWRDUjJIczFXT3RJZUJjMUVqR1NjQ2Z2bU92b3NaRFk1Q0d4UHFiRnRZVXg1UUw2V1JGSTlPRytWaEt4CnJTSDlJNEgxM1ZlSGVBUmhZWjFmMVFkaWNYVmwwRmh5TkpLN3luT003aVV2c0JJTzFad2RvWHJYVkxWVmhCVHMKWVFnQ3RqSFZQSXMxckg5dzlYcGFvOTYrOEZETjduNWMrcWI2TW5Oa1hYZWlKZ0ttNCtFMHRkaFNuSUZxVDlqQQo1T2NnQzk2RHozc3ExenBFWDNiUTZBZSs5TUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    
    service:
      name: aws-load-balancer-webhook-service
      namespace: albc
      path: /validate-networking-v1-ingress
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: vingress.elbv2.k8s.aws
  admissionReviewVersions:
  - v1beta1
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None
